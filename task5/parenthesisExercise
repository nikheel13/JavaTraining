package taskFive;

import java.util.ArrayDeque;
import java.util.Deque;


public class Main {

    static boolean areParanthesisBalanced(String expr)
    {

        Deque<Character> stack = new ArrayDeque<Character>();

        for (int i = 0; i < expr.length(); i++) {
            char x = expr.charAt(i);

            if (x == '(' || x == '[' || x == '{') {

                stack.push(x);
                continue;
            }

            // The code will return false if the string is empty
            if (stack.isEmpty())
                return false;

            switch (x) {
                case ')':
                    stack.pop();
                    if (x == '{' || x == '[')
                        return false;
                    break;

                case '}':
                    stack.pop();
                    if (x == '(' || x == '[')
                        return false;
                    break;

                case ']':
                    stack.pop();
                    if (x == '(' || x == '{')
                        return false;
                    break;
            }
        }

        
        return (stack.isEmpty());
    }

    public static void main(String[] args) {
	// Task 5

        //Exercise 8

        String expr = "([{}])";
        if (areParanthesisBalanced(expr))
            System.out.println("true");
        else
            System.out.println("false ");


    }
}
